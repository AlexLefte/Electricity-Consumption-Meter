;/* initialization file */
;
;#include <mega164a.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;#include "defs.h"
;
;
;/*
; * most intialization values are generated using Code Wizard and depend on clock value
; */
;void Init_initController(void)
; 0001 000C {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0001 000D // Crystal Oscillator division factor: 1
; 0001 000E #pragma optsize-
; 0001 000F CLKPR=0x80;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0001 0010 CLKPR=0x00;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0001 0011 #ifdef _OPTIMIZE_SIZE_
; 0001 0012 #pragma optsize+
; 0001 0013 #endif
; 0001 0014 
; 0001 0015 // Input/Output Ports initialization
; 0001 0016 // Port A initialization
; 0001 0017 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0001 0018 DDRA=0b00001111; // PORTA 7-4 In , PORTA 3-0 Out
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0001 0019 PORTA=0b11111111; // Pull up - PORTA 7-4 (in) , out in logic 1 - PORTA 3-0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0001 001A 
; 0001 001B // Port B initialization
; 0001 001C PORTB=0x00;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0001 001D DDRB=0x00;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0001 001E 
; 0001 001F // Port C initialization
; 0001 0020 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0001 0021 DDRC=0b11111111; // PORTC out
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0001 0022 PORTC = 0b00000000; //PORTC out in 0 logic
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0001 0023 
; 0001 0024 // Port D initialization
; 0001 0025 PORTD=0b00100000; // D.5 needs pull-up resistor
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0001 0026 DDRD= 0b01010000; // D.6 is LED, D.4 is test output
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0001 0027 
; 0001 0028 // Timer/Counter 0 initialization
; 0001 0029 // Clock source: System Clock
; 0001 002A // Clock value: Timer 0 Stopped
; 0001 002B // Mode: Normal top=FFh
; 0001 002C // OC0 output: Disconnected
; 0001 002D TCCR0A=0x00;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0001 002E TCCR0B=0x00;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0001 002F TCNT0=0x00;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0001 0030 OCR0A=0x00;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0001 0031 OCR0B=0x00;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0001 0032 
; 0001 0033 // Timer/Counter 1 initialization
; 0001 0034 // Clock source: System Clock
; 0001 0035 // Clock value: 19.531 kHz = CLOCK/256
; 0001 0036 // Mode: CTC top=OCR1A
; 0001 0037 // OC1A output: Discon.
; 0001 0038 // OC1B output: Discon.
; 0001 0039 // Noise Canceler: Off
; 0001 003A // Input Capture on Falling Edge
; 0001 003B // Timer 1 Overflow Interrupt: Off
; 0001 003C // Input Capture Interrupt: Off
; 0001 003D // Compare A Match Interrupt: On
; 0001 003E // Compare B Match Interrupt: Off
; 0001 003F 
; 0001 0040 TCCR1A=0x00;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0001 0041 TCCR1B=0x0D;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0001 0042 TCNT1H=0x00;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0001 0043 TCNT1L=0x00;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0001 0044 ICR1H=0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0001 0045 ICR1L=0x00;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0001 0046 
; 0001 0047 // 1 sec = 19531 counts = 4C4BH counts
; 0001 0048 // 4C4BH = 4CH (MSB) and 4BH (LSB)
; 0001 0049 
; 0001 004A 
; 0001 004B //1 sec
; 0001 004C //OCR1AH=0x4C;
; 0001 004D //OCR1AL=0x4B;
; 0001 004E 
; 0001 004F // 20 ms
; 0001 0050 OCR1AH=0x01;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0001 0051 OCR1AL=0x86;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0001 0052 
; 0001 0053 //OCR1AH=0x00;
; 0001 0054 //OCR1AL=0x40;
; 0001 0055 
; 0001 0056 
; 0001 0057 OCR1BH=0x00;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0001 0058 OCR1BL=0x00;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0001 0059 
; 0001 005A // Timer/Counter 2 initialization
; 0001 005B // Clock source: System Clock
; 0001 005C // Clock value: Timer2 Stopped
; 0001 005D // Mode: Normal top=0xFF
; 0001 005E // OC2A output: Disconnected
; 0001 005F // OC2B output: Disconnected
; 0001 0060 ASSR=0x00;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0001 0061 TCCR2A=0x00;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0001 0062 TCCR2B=0x00;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0001 0063 TCNT2=0x00;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0001 0064 OCR2A=0x00;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0001 0065 OCR2B=0x00;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0001 0066 
; 0001 0067 // External Interrupt(s) initialization
; 0001 0068 // INT0: Off
; 0001 0069 // INT1: Off
; 0001 006A // INT2: Off
; 0001 006B // Interrupt on any change on pins PCINT0-7: Off
; 0001 006C // Interrupt on any change on pins PCINT8-15: Off
; 0001 006D // Interrupt on any change on pins PCINT16-23: Off
; 0001 006E // Interrupt on any change on pins PCINT24-31: Off
; 0001 006F EICRA=0x00;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0001 0070 EIMSK=0x00;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0001 0071 PCICR=0x00;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0001 0072 
; 0001 0073 // Timer/Counter 0,1,2 Interrupt(s) initialization
; 0001 0074 TIMSK0=0x00;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0001 0075 TIMSK1=0x02;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0001 0076 TIMSK2=0x00;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0001 0077 
; 0001 0078 // USART0 initialization
; 0001 0079 // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0001 007A // USART0 Receiver: On
; 0001 007B // USART0 Transmitter: On
; 0001 007C // USART0 Mode: Asynchronous
; 0001 007D // USART0 Baud rate: 9600
; 0001 007E UCSR0A=0x00;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0001 007F UCSR0B=0xD8;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0001 0080 UCSR0C=0x06;
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0001 0081 UBRR0H=0x00;
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0001 0082 UBRR0L=0x81;
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0001 0083 
; 0001 0084 // USART1 initialization
; 0001 0085 // USART1 disabled
; 0001 0086 UCSR1B=0x00;
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0001 0087 
; 0001 0088 
; 0001 0089 // Analog Comparator initialization
; 0001 008A // Analog Comparator: Off
; 0001 008B // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0001 008C ACSR=0x80;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0001 008D ADCSRB=0x00;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0001 008E DIDR1=0x00;
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0001 008F 
; 0001 0090 // Watchdog Timer initialization
; 0001 0091 // Watchdog Timer Prescaler: OSC/2048
; 0001 0092 #pragma optsize-
; 0001 0093 
; 0001 0094 ///*
; 0001 0095 #asm("wdr")
;PCODE: $0000006B VOL: 0
; 0001 0096 // Write 2 consecutive values to enable watchdog
; 0001 0097 // this is NOT a mistake !
; 0001 0098 WDTCSR=0x18;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0001 0099 WDTCSR=0x08;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0001 009A //*/
; 0001 009B 
; 0001 009C //  disable JTAG
; 0001 009D    MCUCR|= (1<<JTD);
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0001 009E    MCUCR|= (1<<JTD);
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0001 009F 
; 0001 00A0 #ifdef _OPTIMIZE_SIZE_
; 0001 00A1 #pragma optsize+
; 0001 00A2 #endif
; 0001 00A3 
; 0001 00A4 }
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;
;
;
